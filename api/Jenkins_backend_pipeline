pipeline {
    agent {
       label 'kubernetes'
    }

    environment {

    DOCKERHUB_CREDENTIALS = credentials('dockerid')
     registry = "prasanthrk/backend-lms"
        registryCredential = 'dockerid'
        dockerImage = ''
    }

    stages {
        
        
        stage('Building the docker image') {
            steps {
                sh 'cd api && sudo docker build -t prasanthrk/backend .'
            }
        }
        stage('Logging into dockerhub account') {
            steps {
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | sudo docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
            }
        }
        stage('pushing the docker image into dockerhub') {
            steps {
                  sh 'sudo docker push prasanthrk/backend-lms'
            }
        }
        stage('Remove old docker images') {
             steps {
                 sh 'sudo docker rmi -f prasanthrk/backend-lms'
            }
        }
         stage('deploy on kubernetes') {
            steps {
                echo 'Deploying....'
                 sh "cd api && kubectl apply -f database-persistent-volume-claim.yaml"
                 sh "cd api && kubectl apply -f postgres-deployment.yaml"
                 sh "cd api && kubectl apply -f postgres-cluster-ip-service.yaml"
                 sh "cd api && kubectl apply -f api-deployment.yaml"
                 sh "cd api && kubectl apply -f api-load-balancer-service.yaml"
                 sh "kubectl rollout restart deployment api-deployment"
            }
        }
    }
}
